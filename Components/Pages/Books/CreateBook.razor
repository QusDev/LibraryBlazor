@page "/books/create";
@using LibraryBlazor.DTOs.Create
@inject IBookService bookService;
@inject IGenreService genreService;
@inject IAuthorService authorService;
@inject NavigationManager navigationManager;

<h2 class="mb-3">Create book</h2>

<EditForm Model="CreateBookModel" FormName="createBook" OnValidSubmit="@OnFormSubmitAsync">
    <DataAnnotationsValidator />

    <div class="form-group mb-3">
        <label>Title</label>
        <InputText @bind-Value=CreateBookModel.Title class="form-control" placeholder="Enter title">@CreateBookModel.Title</InputText>
        <ValidationMessage For="@(() => CreateBookModel.Title)" />
    </div>

    <div class="form-group mb-3">
        <label>Publication year</label>
        <InputDate TValue="@DateTime" @bind-Value=CreateBookModel.Publication_year class="form-control">@CreateBookModel.Publication_year</InputDate>
        <ValidationMessage For="@(() => CreateBookModel.Publication_year)" />
    </div>

    <div class="form-group mb-3">
        <label>Count pages</label>
        <InputNumber @bind-Value=CreateBookModel.CountPage class="form-control" placeholder="Enter count pages">@CreateBookModel.CountPage</InputNumber>
        <ValidationMessage For="@(() => CreateBookModel.CountPage)" />
    </div>

    <div class="form-check mb-3">
        <label>Available</label>
        <InputCheckbox @bind-Value=CreateBookModel.Available class="form-check-input">@CreateBookModel.Available</InputCheckbox>
        <ValidationMessage For="@(() => CreateBookModel.Available)" />
    </div>

    <div class="mb-4">
        <label>Genres</label>
        <InputSelect @bind-Value="CreateBookModel.SelectedGenresId" class="form-select">
            @foreach (var genre in genres)
            {
                <option value="@genre.Id">@genre.Name</option>
            }
        </InputSelect>
        <small class="form-text text-muted">Hold <b>'CTRL'</b> to select multiple.</small>
        <ValidationMessage For="@(() => CreateBookModel.SelectedGenresId)" />
    </div>

    <div class="mb-4">
        <label>Authors</label>
        <InputSelect @bind-Value="CreateBookModel.SelectedAuthorsId" class="form-select">
            @foreach (var author in authors)
            {
                <option value="@author.Id">@author.FirstName @author.LastName</option>
            }
        </InputSelect>
        <small class="form-text text-muted">Hold <b>'CTRL'</b> to select multiple.</small>
        <ValidationMessage For="@(() => CreateBookModel.SelectedAuthorsId)" />
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-success">Submit</button>
        <NavLink href="/books"><button type="button" class="btn btn-danger">Cancel</button></NavLink>
    </div>

</EditForm>

@code {
    [SupplyParameterFromForm]
    public CreatBookDto CreateBookModel { get; set; } = new CreatBookDto();

    private List<Genre> genres = new List<Genre>();
    private List<Author> authors = new List<Author>();

    protected override async Task OnInitializedAsync()
    {
        genres = await genreService.GetAllAsync();
        authors = await authorService.GetAllAsync();
    }

    public async Task OnFormSubmitAsync()
    {
        var book = new Book()
            {
                Title = CreateBookModel.Title,
                Publication_year = CreateBookModel.Publication_year,
                CountPage = CreateBookModel.CountPage,
                Available = CreateBookModel.Available
            };
        await bookService.AddAsync(book);

        await bookService.AddGenresToBookAsync(book.Id, CreateBookModel.SelectedGenresId.ToList());
        await bookService.AddAuthorsToBookAsync(book.Id, CreateBookModel.SelectedAuthorsId.ToList());

        navigationManager.NavigateTo("/books");
    }
}
